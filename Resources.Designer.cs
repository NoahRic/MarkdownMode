//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MarkdownMode {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MarkdownMode.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _301 {
            get {
                object obj = ResourceManager.GetObject("301", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not create tool window..
        /// </summary>
        internal static string CanNotCreateWindow {
            get {
                return ResourceManager.GetString("CanNotCreateWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to body
        ///{
        ///  font-size:15px;
        ///  line-height:1.7;
        ///  overflow-x:hidden;
        ///  
        ///    background-color: white;
        ///    border-radius: 3px;
        ///    border: 3px solid #EEE;
        ///    box-shadow: inset 0 0 0 1px #CECECE;
        ///    font-family: Helvetica, arial, freesans, clean, sans-serif;
        ///    width: 912px;
        ///    padding: 30px;
        ///    margin: 2em auto;
        ///    
        ///    color:#333333;
        ///}
        ///
        ///
        ///.body-classic{
        ///  color:#444;
        ///  font-family:Georgia, Palatino, &apos;Palatino Linotype&apos;, Times, &apos;Times New Roman&apos;, &quot;Hiragino Sans GB&quot;, &quot;STXihei&quot;, &quot;微软雅黑&quot;, serif;
        ///  font-size:16px [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GitHubCss {
            get {
                return ResourceManager.GetString("GitHubCss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Markdown Mode for Visual Studio.
        /// </summary>
        internal static string GitHubUserAgent {
            get {
                return ResourceManager.GetString("GitHubUserAgent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///
        ///github.com style (c) Vasily Polovnyov &lt;vast@whiteants.net&gt;
        ///
        ///*/
        ///
        ///pre code {
        ///  display: block; padding: 0.5em;
        ///  color: #333;
        ///  background: #f8f8ff
        ///}
        ///
        ///pre .comment,
        ///pre .template_comment,
        ///pre .diff .header,
        ///pre .javadoc {
        ///  color: #998;
        ///  font-style: italic
        ///}
        ///
        ///pre .keyword,
        ///pre .css .rule .keyword,
        ///pre .winutils,
        ///pre .javascript .title,
        ///pre .nginx .title,
        ///pre .subst,
        ///pre .request,
        ///pre .status {
        ///  color: #333;
        ///  font-weight: bold
        ///}
        ///
        ///pre .number,
        ///pre .hexcolor,
        ///pre .ruby .constant {
        ///  color: #099;
        ///}
        ///
        ///pre .s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HighlightCss {
            get {
                return ResourceManager.GetString("HighlightCss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var hljs=new function(){function l(o){return o.replace(/&amp;/gm,&quot;&amp;amp;&quot;).replace(/&lt;/gm,&quot;&amp;lt;&quot;).replace(/&gt;/gm,&quot;&amp;gt;&quot;)}function b(p){for(var o=p.firstChild;o;o=o.nextSibling){if(o.nodeName==&quot;CODE&quot;){return o}if(!(o.nodeType==3&amp;&amp;o.nodeValue.match(/\s+/))){break}}}function h(p,o){return Array.prototype.map.call(p.childNodes,function(q){if(q.nodeType==3){return o?q.nodeValue.replace(/\n/g,&quot;&quot;):q.nodeValue}if(q.nodeName==&quot;BR&quot;){return&quot;\n&quot;}return h(q,o)}).join(&quot;&quot;)}function a(q){var p=(q.className+&quot; &quot;+q.parentNode.classN [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HighlightJavaScript {
            get {
                return ResourceManager.GetString("HighlightJavaScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;script type=&quot;text/javascript&quot; src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;&lt;/script&gt;
        ///&lt;script&gt;
        ///MathJax.Hub.Config({
        ///  config: [&quot;MMLorHTML.js&quot;],
        ///  extensions: [&quot;tex2jax.js&quot;],
        ///  jax: [&quot;input/TeX&quot;],
        ///  tex2jax: {
        ///    inlineMath: [ [&apos;$&apos;,&apos;$&apos;], [&quot;\\(&quot;,&quot;\\)&quot;] ],
        ///    displayMath: [ [&apos;$$&apos;,&apos;$$&apos;], [&quot;\\[&quot;,&quot;\\]&quot;] ],
        ///    processEscapes: false
        ///  },
        ///  TeX: {
        ///    extensions: [&quot;AMSmath.js&quot;, &quot;AMSsymbols.js&quot;],
        ///    TagSide: &quot;right&quot;,
        ///    TagIndent: &quot;.8em&quot;,
        ///    MultLineWidth: &quot;85%&quot;,
        ///    equat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Mathjax {
            get {
                return ResourceManager.GetString("Mathjax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Markdown Preview Window.
        /// </summary>
        internal static string ToolWindowTitle {
            get {
                return ResourceManager.GetString("ToolWindowTitle", resourceCulture);
            }
        }
    }
}
